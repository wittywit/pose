<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Generator: Adobe Illustrator 24.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->

<svg
   version="1.1"
   id="Layer_1"
   x="0px"
   y="0px"
   width="1200px"
   height="1200px"
   viewBox="0 0 1200 1200"
   style="enable-background:new 0 0 1200 1200;"
   xml:space="preserve"
   sodipodi:docname="blathersplains.svg"
   inkscape:version="1.1 (c68e22c387, 2021-05-23)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><defs
   id="defs4728"><meshgradient
     inkscape:collect="always"
     id="meshgradient7686"
     gradientUnits="userSpaceOnUse"
     x="-203.90192"
     y="77.319771"><meshrow
       id="meshrow7688"><meshpatch
         id="meshpatch7690"><stop
           path="c 55.0212,0  110.042,0  165.063,0"
           style="stop-color:#ffffff;stop-opacity:1"
           id="stop7692" /><stop
           path="c 0,19.9191  0,39.8381  0,59.7572"
           style="stop-color:#00ff00;stop-opacity:1"
           id="stop7694" /><stop
           path="c -55.0212,0  -110.042,0  -165.063,0"
           style="stop-color:#ffffff;stop-opacity:1"
           id="stop7696" /><stop
           path="c 0,-19.9191  0,-39.8381  0,-59.7572"
           style="stop-color:#00ff00;stop-opacity:1"
           id="stop7698" /></meshpatch></meshrow></meshgradient></defs><sodipodi:namedview
   id="namedview4726"
   pagecolor="#ffffff"
   bordercolor="#666666"
   borderopacity="1.0"
   inkscape:pageshadow="2"
   inkscape:pageopacity="0.0"
   inkscape:pagecheckerboard="0"
   showgrid="false"
   inkscape:zoom="0.43333333"
   inkscape:cx="289.61538"
   inkscape:cy="601.15385"
   inkscape:window-width="1366"
   inkscape:window-height="705"
   inkscape:window-x="-8"
   inkscape:window-y="-8"
   inkscape:window-maximized="1"
   inkscape:current-layer="Layer_1" />
<style
   type="text/css"
   id="style4457">
	.st0{fill:#5A4328;}
	.st1{fill:#F3F1E3;}
	.st2{fill:#FAFEC2;}
	.st3{fill:#2AB084;}
	.st4{fill:#248061;}
	.st5{fill:#F3DB3F;}
	.st6{fill:#EEECDE;}
	.st7{fill:#A7770F;}
	.st8{fill:#7C7B67;}
	.st9{fill:#F0F8FB;}
	.st10{fill:#000004;}
	.st11{fill:#D16046;}
	.st12{fill:#FDEC47;}
	.st13{fill:#775934;}
	.st14{fill:#231F14;}
	.st15{fill:#DCDACE;}
	.st16{fill:none;stroke:#000000;stroke-miterlimit:10;}
</style>
<g
   inkscape:label="illustration_1_"
   id="layer1-0"
   transform="matrix(0,2.6378273,-3.4855253,0,1059.9389,685.0003)"><path
     style="fill:url(#meshgradient7686);fill-opacity:1;stroke:#000000;stroke-width:0.264583px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="m -203.90192,128.50961 c 2.48338,-6.55112 7.92978,-11.14419 11.99423,-16.56346 2.88335,-3.84446 4.98263,-8.22733 7.99615,-11.994228 4.57827,-5.722834 10.70486,-8.159178 15.99231,-12.565385 0.32704,-0.272534 0.21015,-0.91668 0.57115,-1.142307 3.57338,-2.233358 13.3525,-5.908317 17.13462,-6.853845 1.67253,-0.418135 3.43643,-0.309007 5.14039,-0.571157 8.64931,-1.330663 18.05787,-1.941065 26.84423,-1.142306 2.1618,0.196527 4.17678,1.186984 6.28269,1.713463 7.24396,1.81099 13.337073,3.527189 19.990383,6.853845 3.51818,1.759091 2.590723,0.506334 6.28269,2.85577 3.342291,2.126911 6.473079,4.56923 9.709615,6.853846 3.646197,2.573785 7.895619,5.812614 10.851925,9.138464 0.565656,0.63636 0.610426,1.61976 1.142307,2.28461 9.59435,11.99294 -0.331629,-0.90278 5.140383,4.56923 3.177757,3.17776 2.545146,3.39353 5.140386,6.85385 3.021476,4.02863 6.799588,7.26589 9.709616,11.42308 1.03532,1.47902 4.187669,6.85384 5.140383,6.85384"
     id="path4318" /><path
     style="fill:#00ffff;fill-opacity:1;stroke:#000000;stroke-width:0.264583px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="m -203.90192,128.50961 c -0.19038,0.57115 -0.8404,1.17498 -0.57115,1.71347 0.60204,1.20409 1.93721,1.8716 2.85577,2.85577 8.27147,8.86229 17.01853,17.26441 26.27307,25.13076 10.72501,9.11626 29.67659,20.34988 44.55,21.13269 3.99255,0.21014 7.99615,0 11.99423,0 3.27865,0 9.20105,0.72094 12.56539,0 1.41774,-0.3038 2.62255,-1.25495 3.99807,-1.71346 10.550434,-3.51681 -1.96207,2.18807 9.709617,-4.56923 3.662476,-2.12038 5.472819,-2.40308 8.567309,-4.56923 2.742755,-1.91993 5.132313,-4.56439 7.996152,-6.28269 1.735223,-1.04113 3.543446,-1.57822 5.140386,-2.85577 2.155939,-1.72475 4.318569,-3.17626 6.282693,-5.14038 0.829693,-0.8297 1.237681,-2.33231 2.284613,-2.85577 1.17855,-0.58928 0.241639,1.80134 1.713463,-1.14231 0.170286,-0.34057 -0.228462,-0.83769 0,-1.14231 0.583449,-0.77793 3.234201,-2.24467 3.998077,-2.85577 1.248222,-0.99857 2.148265,-2.46793 3.426923,-3.42692 2.002702,-1.50203 2.496944,-1.24847 4.569232,-2.28462 0.871265,-0.43563 1.432793,-1.28755 2.284613,-1.71346 0.344848,-0.17242 1.449438,0.26403 1.713463,0 0.269243,-0.26924 -0.373374,-1.06763 0,-1.1423 1.876184,-0.37524 3.80769,-0.38078 5.711537,-0.57116"
     id="path4320" /><path
     style="fill:none;stroke:#000000;stroke-width:0.264583px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="m -38.838462,137.07692 c -0.571154,-0.57115 -1.142307,-1.14231 -1.71346,-1.71346 0.571153,0.57115 1.142306,1.14231 1.71346,1.71346"
     id="path4322" /><path
     style="fill:#ff00ff;fill-opacity:1;stroke:#000000;stroke-width:0.264583px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="m -40.551922,135.36346 c 1.281975,-4.68355 5.228362,-7.73269 7.996152,-11.42308 2.150359,-2.86714 4.306867,-6.02033 6.853847,-8.56731 2.893343,-2.89334 6.892144,-5.17868 9.709615,-7.99615 2.184052,-2.18405 3.416492,-3.64599 5.711539,-5.71154 3.1943874,-2.874947 6.4813045,-5.742533 9.70961516,-8.567304 0.51659986,-0.452024 1.27401239,-0.614968 1.71346154,-1.142309 0.5450696,-0.654082 0.6576676,-1.584579 1.1423077,-2.284614 1.9913187,-2.876348 4.6953117,-6.260417 6.853846,-9.138462 2.3226506,-3.096868 4.9131166,-6.313339 6.8538466,-9.709615 1.028869,-1.800522 2.533894,-4.56923 2.284615,-4.56923 -0.363377,0 -1.628063,4.256101 -1.713462,4.56923 C 14.907183,76.896094 14.85,83.925086 14.85,90.242307 c 0,4.19935 -0.593085,8.98494 0,13.136543 0.903273,6.3229 2.855769,10.48021 2.855769,17.13461 0,2.70295 0.385049,5.87196 0,8.56731 -0.08514,0.596 -0.380769,1.14231 -0.571154,1.71346 -0.190384,0.76154 -0.473789,1.5057 -0.571154,2.28462 -0.235306,1.88244 -0.630628,8.8093 0,10.28076 0.318182,0.74243 1.297887,1.02084 1.713462,1.71346 0.195904,0.32651 -0.170285,0.80174 0,1.14231 0.24082,0.48164 0.805916,0.72182 1.142308,1.14231 0.926666,1.15833 1.830361,3.77762 2.284615,5.14038 0.699925,2.09978 0.302525,9.00288 0,11.42308 -0.194408,1.55526 -0.933958,3.11078 -1.142308,4.56923 -0.517493,3.62245 0.887871,7.8716 0,11.42308 -1.744509,6.97804 -3.736657,1.73406 -7.425,-0.57116 -1.686121,-1.05382 -4.3745996,-2.09253 -6.282692,-2.85576 -10.0295685,-4.01183 -19.501279,-8.07821 -27.415384,-15.99231 -1.673937,-1.67394 -3.421169,-6.27118 -4.569231,-8.56731 -0.51882,-1.03764 -2.307652,-1.7365 -2.855768,-2.28461 -0.602049,-0.60205 -0.540261,-1.68257 -1.14231,-2.28462 -1.071065,-1.07106 -2.019527,-1.60141 -2.855769,-2.85577 -1.070504,-1.60576 -8.613598,-6.2364 -7.996153,-6.85384 0.301024,-0.30103 0.76154,-0.38078 1.142307,-0.57116"
     id="path4324" /><path
     style="fill:none;stroke:#000000;stroke-width:0.264583px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="m -159.92308,83.388461 c 1.77315,3.813363 2.06797,8.055208 2.85577,11.994229 0.0835,0.417446 0.52415,0.719198 0.57116,1.142309 0.35015,3.151381 0,6.518621 0,9.709611 0,6.2827 0,12.56539 0,18.84808 0,5.12634 0.84463,11.03706 -0.57116,15.99231 -1.06293,3.72026 -2.86047,6.86326 -4.56923,10.28077 -1.35313,2.70627 0.33438,-3.85889 -1.71346,2.28461 -0.18061,0.54185 0.13853,1.15936 0,1.71346 -0.1306,0.52242 -0.90149,0.66067 -1.14231,1.14231 -0.23776,0.47554 0.36229,1.92233 0,2.28462 -0.28557,0.28557 -0.85673,0.28557 -1.1423,0.57115 -0.26925,0.26925 0.26924,0.87306 0,1.14231 -0.47596,0.47596 -1.2375,0.66634 -1.71347,1.14231 -0.62737,0.62737 0.20978,1.71346 -1.1423,1.71346"
     id="path4326" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4355"
     sodipodi:cx="-649.76617"
     sodipodi:cy="407.99274"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="43.442833"
     sodipodi:argument="-17.679575"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -649.76617,407.99274 c 0.85269,2.01223 -2.29176,2.14217 -3.34446,1.41723 -2.85275,-1.96456 -1.73169,-6.1833 0.51,-8.10614 4.00986,-3.43952 10.05705,-1.58506 12.86782,2.43722 4.12492,5.90286 1.45607,13.99131 -4.36445,17.62951 -7.75783,4.84915 -17.94807,1.3359 -22.39119,-6.29168 -5.59122,-9.59853 -1.22058,-21.91582 8.2189,-27.15288 11.43249,-6.34277 25.88982,-1.10811 31.91457,10.14614 7.09995,13.26273 0.99743,29.8677 -12.07336,36.67624 -15.09075,7.86074 -33.8482,0.88796 -41.43794,-14.00058 -8.62394,-16.91732 -0.77932,-37.83051 15.92782,-46.19962 18.74288,-9.38888 41.81415,-0.67129 50.9613,17.85504 9.68711,19.61994 1.44359,43.7584 -17.36081,54.44598" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4357"
     sodipodi:cx="-528.87946"
     sodipodi:cy="317.32767"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="14.480945"
     sodipodi:argument="-17.679575"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -528.87946,317.32767 c 0.28423,0.67074 -0.76391,0.71405 -1.11481,0.47241 -0.95092,-0.65485 -0.57723,-2.0611 0.17,-2.70205 1.33661,-1.1465 3.35235,-0.52835 4.28927,0.81241 1.37497,1.96762 0.48535,4.66377 -1.45482,5.8765 -2.58594,1.61639 -5.98269,0.4453 -7.46373,-2.09722 -1.86374,-3.19952 -0.40686,-7.30528 2.73964,-9.05096 3.81082,-2.11426 8.62994,-0.36937 10.63818,3.38204 2.36666,4.42091 0.33248,9.9559 -4.02445,12.22542 -5.03025,2.62024 -11.28273,0.29598 -13.81264,-4.66687 -2.87465,-5.6391 -0.25978,-12.61017 5.30927,-15.39987 6.24763,-3.12962 13.93805,-0.22376 16.9871,5.95168 3.22904,6.53998 0.4812,14.58614 -5.78694,18.14866" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4361"
     sodipodi:cx="-526.72076"
     sodipodi:cy="384.24713"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="20.365057"
     sodipodi:argument="-17.774527"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -526.72076,384.24713 c 0.48735,0.90114 -0.97428,1.10154 -1.49776,0.81002 -1.4186,-0.79001 -1.08294,-2.80858 -0.12228,-3.80553 1.7184,-1.78333 4.62285,-1.18668 6.11331,0.56546 2.18731,2.57134 1.30133,6.46457 -1.25321,8.42108 -3.4048,2.60773 -8.31639,1.42112 -10.72885,-1.94095 -3.03584,-4.23082 -1.54364,-10.17314 2.62869,-13.03663 5.05326,-3.46807 12.03267,-1.66777 15.3444,3.31644 3.90277,5.87372 1.79293,13.89393 -4.00418,17.65218 -6.69298,4.33904 -15.75636,1.91874 -19.95995,-4.69193 -4.77639,-7.51146 -2.04504,-17.6196 5.37967,-22.26772 8.32939,-5.21449 19.48343,-2.17167 24.5755,6.06741 5.39264,8.72543 2.61849,20.35643 -5.68189,26.17971" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4363"
     sodipodi:cx="-518.086"
     sodipodi:cy="446.84918"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="20.365057"
     sodipodi:argument="-17.774527"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -518.086,446.84918 c 0.48736,0.90114 -0.97428,1.10154 -1.49776,0.81002 -1.41859,-0.79001 -1.08293,-2.80858 -0.12227,-3.80553 1.7184,-1.78333 4.62284,-1.18668 6.11331,0.56546 2.18731,2.57134 1.30133,6.46457 -1.25322,8.42108 -3.4048,2.60774 -8.31639,1.42112 -10.72885,-1.94095 -3.03583,-4.23082 -1.54364,-10.17314 2.6287,-13.03663 5.05325,-3.46807 12.03266,-1.66777 15.3444,3.31644 3.90277,5.87372 1.79292,13.89393 -4.00418,17.65218 -6.69299,4.33904 -15.75636,1.91874 -19.95995,-4.69193 -4.77639,-7.51146 -2.04504,-17.6196 5.37966,-22.26772 8.3294,-5.21449 19.48344,-2.17167 24.5755,6.06741 5.39265,8.72543 2.61849,20.35643 -5.68189,26.17971" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4365"
     sodipodi:cx="-526.72076"
     sodipodi:cy="507.29254"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="24.134907"
     sodipodi:argument="-17.679575"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -526.72076,507.29254 c 0.47371,1.11791 -1.2732,1.1901 -1.85804,0.78735 -1.58486,-1.09142 -0.96205,-3.43516 0.28334,-4.50341 2.2277,-1.91084 5.58725,-0.88059 7.14879,1.35401 2.29162,3.27937 0.80892,7.77295 -2.4247,9.79418 -4.3099,2.69397 -9.97115,0.74216 -12.43955,-3.49538 -3.10623,-5.33252 -0.6781,-12.17546 4.56606,-15.08493 6.35138,-3.52377 14.38323,-0.61562 17.73031,5.63674 3.94442,7.36818 0.55413,16.59316 -6.70742,20.37569 -8.38375,4.36707 -18.80455,0.49331 -23.02107,-7.7781 -4.79108,-9.39851 -0.43296,-21.01695 8.84878,-25.66646 10.41272,-5.21604 23.23009,-0.37294 28.31184,9.91947 5.38172,10.89997 0.80199,24.31022 -9.6449,30.24776" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4367"
     sodipodi:cx="-539.67291"
     sodipodi:cy="574.21198"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="23.349821"
     sodipodi:argument="-17.80393"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -539.67291,574.21198 c 0.58891,1.01634 -1.07946,1.29527 -1.68923,0.97881 -1.65244,-0.85757 -1.33579,-3.18231 -0.26841,-4.35727 1.90929,-2.10173 5.25809,-1.51584 7.02532,0.442 2.59348,2.87319 1.70932,7.36495 -1.1524,9.69337 -3.81424,3.1034 -9.48325,1.90902 -12.36142,-1.86282 -3.62189,-4.74647 -2.11204,-11.60706 2.57322,-15.02946 5.67447,-4.14498 13.73403,-2.31698 17.69751,3.28363 4.67083,6.60012 2.52315,15.86294 -3.99404,20.36556 -7.52435,5.19844 -17.99317,2.73013 -23.0336,-4.70445 -5.72726,-8.44763 -2.93768,-20.12431 5.41485,-25.70165 9.37028,-6.25693 22.25613,-3.14564 28.3697,6.12526 6.47446,9.81816 3.68715,23.24157 -5.62935,30.19524" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4369"
     sodipodi:cx="-552.62506"
     sodipodi:cy="634.65533"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="20.365057"
     sodipodi:argument="-17.774527"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -552.62506,634.65533 c 0.48735,0.90115 -0.97428,1.10154 -1.49776,0.81002 -1.4186,-0.79 -1.08294,-2.80857 -0.12227,-3.80553 1.7184,-1.78332 4.62284,-1.18668 6.1133,0.56547 2.18732,2.57134 1.30133,6.46456 -1.25321,8.42108 -3.4048,2.60773 -8.31639,1.42111 -10.72885,-1.94096 -3.03584,-4.23081 -1.54364,-10.17313 2.62869,-13.03662 5.05326,-3.46808 12.03267,-1.66778 15.34441,3.31643 3.90276,5.87373 1.79292,13.89394 -4.00418,17.65218 -6.69299,4.33904 -15.75636,1.91874 -19.95995,-4.69192 -4.77639,-7.51146 -2.04504,-17.6196 5.37966,-22.26773 8.3294,-5.21449 19.48344,-2.17167 24.5755,6.06741 5.39265,8.72544 2.61849,20.35643 -5.68189,26.17971" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4371"
     sodipodi:cx="-451.16656"
     sodipodi:cy="321.64505"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="19.902155"
     sodipodi:argument="-17.924555"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -451.16656,321.64505 c 0.60255,0.79958 -0.78054,1.20672 -1.32896,1.00149 -1.48617,-0.55616 -1.45668,-2.55572 -0.67402,-3.6594 1.39999,-1.97421 4.29368,-1.82192 5.98984,-0.34655 2.48917,2.16517 2.20173,6.05657 0.0191,8.32028 -2.90912,3.01716 -7.82848,2.58797 -10.65071,-0.30838 -3.5515,-3.64477 -2.97759,-9.60475 0.63584,-12.98116 4.37635,-4.08929 11.38346,-3.36916 15.3116,0.96331 4.62918,5.10566 3.76196,13.1637 -1.29078,17.64204 -5.83358,5.17042 -14.94497,4.15558 -19.97248,-1.61824 -5.71257,-6.56059 -4.54977,-16.72697 1.94571,-22.30293 7.28696,-6.25538 18.50948,-4.94439 24.63337,2.27318 6.48538,7.64362 5.50366,19.28777 -1.66633,26.12719" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4373"
     sodipodi:cx="-449.00787"
     sodipodi:cy="388.56451"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="18.317106"
     sodipodi:argument="-18.001326"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -449.00787,388.56451 c 0.60937,0.6912 -0.63108,1.16244 -1.14882,1.01282 -1.40304,-0.40545 -1.51712,-2.24242 -0.87682,-3.31045 1.14534,-1.91046 3.81148,-1.97497 5.47209,-0.74082 2.43702,1.81115 2.44793,5.40238 0.60482,7.63373 -2.45658,2.97404 -7.00111,2.92744 -9.79537,0.46882 -3.51629,-3.09392 -3.41034,-8.60359 -0.33282,-11.95701 3.72729,-4.06144 10.20818,-3.89522 14.11865,-0.19682 4.60834,4.35843 4.38133,11.81409 0.0608,16.28028 -4.9882,5.1564 -13.42088,4.86828 -18.44192,-0.0752 -5.70522,-5.61707 -5.3558,-15.0283 0.21118,-20.60356 6.2453,-6.2546 16.63615,-5.84374 22.76519,0.34717 6.49084,6.55637 6.41189,17.31089 0.31514,24.09317" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4375"
     sodipodi:cx="-436.05573"
     sodipodi:cy="449.00787"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="21.260647"
     sodipodi:argument="-17.634151"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -436.05573,449.00787 c 0.37216,1.00271 -1.16801,0.99636 -1.66656,0.61855 -1.35102,-1.02384 -0.70919,-3.06143 0.42947,-3.95167 2.03681,-1.59243 4.95201,-0.55143 6.23678,1.47749 1.88545,2.97751 0.40093,6.87255 -2.5255,8.52188 -3.90048,2.1983 -8.8043,0.25426 -10.80699,-3.57352 -2.52018,-4.81686 -0.10971,-10.74152 4.62153,-13.09209 5.73017,-2.84686 12.68187,0.0336 15.3772,5.66954 3.17637,6.64178 -0.17609,14.62416 -6.71756,17.66231 -7.55238,3.50768 -16.56774,-0.31807 -19.94742,-7.76557 -3.84021,-8.46234 0.45968,-18.51224 8.8136,-22.23253 9.37183,-4.17361 20.45739,0.60102 24.51763,9.86161 4.29992,9.80724 -0.26666,21.42508 -9.69742,26.23223" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4377"
     sodipodi:cx="-457.64264"
     sodipodi:cy="528.87946"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="18.317106"
     sodipodi:argument="-18.001326"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -457.64264,528.87946 c 0.60937,0.69119 -0.63108,1.16243 -1.14882,1.01281 -1.40304,-0.40545 -1.51711,-2.24242 -0.87682,-3.31045 1.14534,-1.91045 3.81148,-1.97497 5.4721,-0.74082 2.43701,1.81115 2.44793,5.40238 0.60482,7.63373 -2.45658,2.97404 -7.00111,2.92744 -9.79537,0.46882 -3.51629,-3.09392 -3.41034,-8.60358 -0.33282,-11.957 3.72729,-4.06145 10.20817,-3.89522 14.11864,-0.19683 4.60835,4.35843 4.38133,11.81409 0.0608,16.28028 -4.9882,5.1564 -13.42088,4.86828 -18.44191,-0.0752 -5.70522,-5.61707 -5.3558,-15.0283 0.21117,-20.60356 6.2453,-6.2546 16.63615,-5.84374 22.76519,0.34718 6.49084,6.55636 6.41189,17.31088 0.31515,24.09316" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4379"
     sodipodi:cx="-444.69049"
     sodipodi:cy="593.6402"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="22.225092"
     sodipodi:argument="-17.723026"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -444.69049,593.6402 c 0.48054,1.00952 -1.12374,1.14581 -1.67789,0.79868 -1.50174,-0.94071 -1.0225,-3.12187 0.0805,-4.15447 1.97305,-1.84708 5.10505,-1.03363 6.63105,0.95974 2.23947,2.92535 1.05513,7.11875 -1.83895,9.10762 -3.85735,2.65086 -9.14377,1.08165 -11.5842,-2.71816 -3.07104,-4.78166 -1.11088,-11.17429 3.59737,-14.06078 5.70232,-3.49592 13.20795,-1.1417 16.53736,4.47658 3.9236,6.62096 1.17353,15.24355 -5.35579,19.01394 -7.53837,4.35306 -17.28046,1.20604 -21.49052,-6.235 -4.78374,-8.45498 -1.23901,-19.31828 7.11422,-23.96709 9.37105,-5.21528 21.35675,-1.27232 26.44367,7.99342 5.38719,9.8127 1.71025,22.33333 -7.66338,28.21374" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4381"
     sodipodi:cx="-466.2774"
     sodipodi:cy="658.40094"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="13.822371"
     sodipodi:argument="-18.111982"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -466.2774,658.40094 c 0.51463,0.46762 -0.37644,0.92442 -0.77722,0.85535 -1.08607,-0.18717 -1.3247,-1.5554 -0.93348,-2.40978 0.6998,-1.52828 2.69403,-1.79884 4.04233,-1.01162 1.97869,1.15529 2.28615,3.8478 1.08976,5.6749 -1.5946,2.43524 -5.00688,2.779 -7.30746,1.16789 -2.89504,-2.02741 -3.27472,-6.16849 -1.24603,-8.94002 2.45702,-3.35668 7.33154,-3.77209 10.57258,-1.32416 3.81947,2.8848 4.27051,8.49546 1.40231,12.20514 -3.31146,4.28298 -9.65998,4.76961 -13.83771,1.48044 -4.747,-3.73737 -5.2692,-10.82491 -1.55857,-15.47027 4.16276,-5.21139 11.99014,-5.76914 17.10282,-1.63671 5.41449,4.37637 6.25149,12.44884 2.24412,18.04362" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4383"
     sodipodi:cx="-366.9776"
     sodipodi:cy="351.86676"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="20.479147"
     sodipodi:argument="-17.537678"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -366.9776,351.86676 c 0.26377,0.99589 -1.2123,0.8469 -1.65523,0.43841 -1.20031,-1.10698 -0.3959,-3.00099 0.77841,-3.74887 2.10057,-1.33778 4.79896,-0.0692 5.8425,1.99523 1.53144,3.02967 -0.25325,6.62635 -3.21204,7.93614 -3.9436,1.74575 -8.46483,-0.57312 -10.02978,-4.42886 -1.96933,-4.85207 0.89145,-10.30876 5.64568,-12.12342 5.75801,-2.19779 12.15579,1.20887 14.21706,6.8625 2.42913,6.66261 -1.52572,14.00476 -8.07932,16.31069 -7.5664,2.6623 -15.85502,-1.84216 -18.40433,-9.29613 -2.89669,-8.46968 2.15835,-17.70619 10.51296,-20.49797 9.3726,-3.13195 19.55802,2.47435 22.5916,11.72978 3.21265,9.80178 -2.24356,20.51682 -11.73145,24.25073" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4385"
     sodipodi:cx="-366.9776"
     sodipodi:cy="423.10358"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="22.947208"
     sodipodi:argument="-18.067894"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -366.9776,423.10358 c 0.81932,0.81321 -0.69198,1.50563 -1.35162,1.36176 -1.78759,-0.3899 -2.08327,-2.67661 -1.3719,-4.06501 1.27247,-2.48351 4.59977,-2.78633 6.77838,-1.38203 3.1972,2.06086 3.51012,6.54898 1.39218,9.49176 -2.82289,3.92227 -8.50744,4.24273 -12.20515,1.40231 -4.65319,-3.57437 -4.97989,-10.47028 -1.41244,-14.91852 4.32065,-5.38741 12.43562,-5.71971 17.6319,-1.42259 6.12364,5.06401 6.46118,14.4025 1.43272,20.34529 -5.80555,6.86117 -16.37041,7.20375 -23.05866,1.44286 -7.59962,-6.5459 -7.94711,-18.33905 -1.453,-25.77204 7.28541,-8.3387 20.30821,-8.69103 28.48542,-1.46314 8.65991,7.65455 9.45745,21.10427 2.4017,30.09019" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4387"
     sodipodi:cx="-371.29498"
     sodipodi:cy="496.49908"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="22.947208"
     sodipodi:argument="-17.934757"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -371.29498,496.49908 c 0.70411,0.91478 -0.88572,1.40046 -1.52043,1.17029 -1.72001,-0.62374 -1.70952,-2.92946 -0.82015,-4.21114 1.59088,-2.29262 4.92893,-2.15108 6.90185,-0.47001 2.89534,2.46703 2.60972,6.95697 0.11988,9.59256 -3.31856,3.51284 -8.99534,3.07587 -12.28328,-0.23025 -4.13753,-4.16042 -3.54596,-11.03868 0.5804,-14.97399 4.99756,-4.7662 13.08482,-4.01835 17.6647,0.93052 5.39723,5.83207 4.49216,15.13273 -1.28066,20.35542 -6.66496,6.02981 -17.1818,4.96694 -23.04614,-1.6308 -6.66343,-7.49677 -5.44238,-19.23168 1.98094,-25.73684 8.32785,-7.29781 21.28217,-5.91833 28.42756,2.33107 7.56718,8.73636 6.57229,22.17293 -1.61384,30.14272" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4389"
     sodipodi:cx="-371.29498"
     sodipodi:cy="582.84674"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="21.586918"
     sodipodi:argument="-17.859428"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -371.29498,582.84674 c 0.59573,0.90796 -0.93,1.251 -1.50909,0.99015 -1.56931,-0.70687 -1.39624,-2.86901 -0.47122,-4.00833 1.65464,-2.03797 4.77589,-1.66888 6.50758,0.0477 2.54133,2.51919 1.95553,6.71077 -0.56666,9.00683 -3.36169,3.06028 -8.65587,2.24849 -11.50607,-1.08561 -3.58669,-4.19562 -2.5448,-10.60591 1.60454,-14.00531 5.02542,-4.11713 12.55875,-2.84306 16.50456,2.12348 4.65,5.8529 3.14254,14.51333 -2.64242,19.0038 -6.67897,5.18443 -16.46908,3.44284 -21.50305,-3.16136 -5.71991,-7.50411 -3.74371,-18.42564 3.6803,-24.00228 8.32862,-6.25616 20.38281,-4.045 26.50153,4.19924 6.47992,8.73089 4.59539,21.26467 -3.64786,28.16121" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4391"
     sodipodi:cx="-377.77106"
     sodipodi:cy="645.44879"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="20.365057"
     sodipodi:argument="-17.774527"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -377.77106,645.44879 c 0.48736,0.90114 -0.97428,1.10154 -1.49776,0.81002 -1.41859,-0.79001 -1.08293,-2.80858 -0.12227,-3.80553 1.7184,-1.78333 4.62285,-1.18668 6.11331,0.56546 2.18731,2.57134 1.30133,6.46457 -1.25321,8.42108 -3.40481,2.60774 -8.3164,1.42112 -10.72886,-1.94095 -3.03583,-4.23082 -1.54364,-10.17314 2.6287,-13.03663 5.05326,-3.46807 12.03266,-1.66777 15.3444,3.31644 3.90277,5.87372 1.79292,13.89393 -4.00418,17.65218 -6.69299,4.33904 -15.75636,1.91874 -19.95995,-4.69193 -4.77639,-7.51146 -2.04504,-17.6196 5.37966,-22.26772 8.3294,-5.21449 19.48344,-2.17167 24.5755,6.06741 5.39265,8.72543 2.61849,20.35643 -5.68189,26.17971" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4393"
     sodipodi:cx="-293.58206"
     sodipodi:cy="392.8819"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="20.365057"
     sodipodi:argument="-17.774527"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -293.58206,392.8819 c 0.48735,0.90114 -0.97428,1.10153 -1.49776,0.81001 -1.4186,-0.79 -1.08294,-2.80857 -0.12227,-3.80553 1.7184,-1.78332 4.62284,-1.18667 6.1133,0.56547 2.18731,2.57134 1.30133,6.46456 -1.25321,8.42108 -3.4048,2.60773 -8.31639,1.42111 -10.72885,-1.94095 -3.03584,-4.23082 -1.54364,-10.17314 2.62869,-13.03663 5.05326,-3.46807 12.03267,-1.66778 15.34441,3.31644 3.90276,5.87372 1.79292,13.89393 -4.00419,17.65217 -6.69298,4.33904 -15.75635,1.91875 -19.95995,-4.69192 -4.77638,-7.51146 -2.04503,-17.6196 5.37967,-22.26772 8.3294,-5.2145 19.48344,-2.17168 24.5755,6.0674 5.39265,8.72544 2.61849,20.35643 -5.68189,26.17972" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4397"
     sodipodi:cx="-308.6929"
     sodipodi:cy="457.64264"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="19.902155"
     sodipodi:argument="-18.078098"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -308.6929,457.64264 c 0.71775,0.69802 -0.5868,1.3119 -1.16015,1.19296 -1.55375,-0.32233 -1.83042,-2.30287 -1.22576,-3.51326 1.08158,-2.16511 3.96452,-2.45717 5.86636,-1.25857 2.79103,1.759 3.10213,5.64858 1.29137,8.21947 -2.41345,3.4266 -7.34057,3.75482 -10.57258,1.32418 -4.06714,-3.05872 -4.41151,-9.03635 -1.35698,-12.92569 3.69944,-4.7105 10.73425,-5.07051 15.27879,-1.38979 5.35559,4.33761 5.73097,12.43349 1.4226,17.63191 -4.97418,6.00178 -14.13359,6.39238 -19.98501,1.4554 -6.64875,-5.60972 -7.05448,-15.83433 -1.48821,-22.33812 6.24453,-7.29626 17.53552,-7.71707 24.69123,-1.52101 7.57811,6.56181 8.3888,18.21912 2.34919,26.07466" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4401"
     sodipodi:cx="-287.10599"
     sodipodi:cy="522.40338"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="21.586918"
     sodipodi:argument="-18.143223"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -287.10599,522.40338 c 0.82614,0.70484 -0.54252,1.46136 -1.17148,1.37309 -1.70446,-0.23919 -2.14371,-2.36331 -1.5747,-3.71606 1.01782,-2.41975 4.11756,-2.93937 6.26064,-1.77631 3.14504,1.70685 3.75632,5.89479 1.97791,8.80522 -2.37033,3.87914 -7.68005,4.5822 -11.34979,2.17952 -4.61799,-3.02352 -5.41267,-9.46912 -2.38113,-13.89437 3.6716,-5.35956 11.26034,-6.24579 16.43895,-2.58273 6.10281,4.31678 7.08057,13.05288 2.78434,18.98352 -4.96017,6.84716 -14.84632,7.91647 -21.5281,2.98595 -7.59227,-5.60237 -8.75315,-16.64037 -3.18756,-24.07268 6.24375,-8.33792 18.43489,-9.59039 26.61726,-3.38916 8.66537,6.56728 10.36569,19.12738 4.38319,28.05617" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4403"
     sodipodi:cx="-304.37552"
     sodipodi:cy="578.52936"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="19.902155"
     sodipodi:argument="-17.924555"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -304.37552,578.52936 c 0.60256,0.79958 -0.78054,1.20672 -1.32895,1.00149 -1.48618,-0.55617 -1.45668,-2.55573 -0.67402,-3.6594 1.39999,-1.97421 4.29368,-1.82193 5.98983,-0.34655 2.48918,2.16516 2.20174,6.05657 0.0191,8.32027 -2.90913,3.01717 -7.82848,2.58798 -10.65072,-0.30838 -3.55149,-3.64476 -2.97758,-9.60474 0.63585,-12.98115 4.37634,-4.0893 11.38346,-3.36916 15.3116,0.96331 4.62918,5.10566 3.76195,13.1637 -1.29078,17.64204 -5.83358,5.17042 -14.94497,4.15558 -19.97248,-1.61825 -5.71258,-6.56058 -4.54978,-16.72696 1.94571,-22.30292 7.28695,-6.25539 18.50947,-4.94439 24.63336,2.27318 6.48539,7.64362 5.50367,19.28777 -1.66633,26.12719" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path4405"
     sodipodi:cx="-235.29739"
     sodipodi:cy="472.75348"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="23.349821"
     sodipodi:argument="-17.80393"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -235.29739,472.75348 c 0.58891,1.01634 -1.07946,1.29528 -1.68923,0.97882 -1.65244,-0.85758 -1.33579,-3.18231 -0.26841,-4.35728 1.90929,-2.10173 5.25809,-1.51583 7.02532,0.442 2.59348,2.8732 1.70932,7.36496 -1.15241,9.69337 -3.81423,3.1034 -9.48324,1.90902 -12.36141,-1.86281 -3.62189,-4.74647 -2.11204,-11.60707 2.57322,-15.02947 5.67447,-4.14498 13.73403,-2.31698 17.69751,3.28363 4.67083,6.60013 2.52315,15.86295 -3.99404,20.36556 -7.52435,5.19844 -17.99317,2.73013 -23.0336,-4.70444 -5.72726,-8.44764 -2.93768,-20.12432 5.41485,-25.70166 9.37028,-6.25693 22.25613,-3.14563 28.3697,6.12526 6.47446,9.81816 3.68715,23.24158 -5.62936,30.19525" /><path
     style="fill:#ffff00;stroke:#000000;stroke-width:0.264583px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="m -139.93269,83.959609 c 1.90385,-3.617307 3.95409,-7.161268 5.71154,-10.851917 1.03254,-2.168332 -1.07292,-5.850316 0,-7.996155 0.39128,-0.782561 1.42886,-3.571174 1.71346,-3.998077 0.2987,-0.448048 0.86526,-0.680556 1.14231,-1.142307 0.57271,-0.954516 0.31643,-2.601052 1.1423,-3.426923 0.13463,-0.134622 0.43654,0.134623 0.57116,0 1.05143,-1.051433 1.80433,-2.37549 2.85577,-3.426923 2.70853,-2.708528 5.73483,-4.981061 7.99615,-7.996155 2.21725,-2.956335 3.43693,-6.302703 5.14039,-9.709613 0.45809,-0.916194 2.712,-3.566787 2.85577,-3.998079 0.17134,-0.514038 -0.17135,-1.199422 0,-1.71346 1.37903,-4.137106 -0.16467,0.900486 1.1423,-1.713463 0.17029,-0.340569 -0.38077,-1.142307 0,-1.142307 0.97078,0 0.43387,1.89475 0.57116,2.85577 0.54563,3.819419 2.48227,7.644492 3.42692,11.423076 1.79363,7.174521 -1.83261,-2.522921 4.56923,10.280769 0.9466,1.893205 0.29356,1.729425 1.713461,4.569232 2.010839,4.021672 5.172419,8.124285 6.282693,12.565383 0.426857,1.707425 1.284705,12.851746 0.571153,14.278847 -0.493218,0.986436 -1.129279,1.129279 -1.71346,1.713461 -2.128565,2.128565 -1.843315,5.732436 -2.855772,8.567311"
     id="path4448" /><path
     style="fill:#ffff00;fill-opacity:1;stroke:#000000;stroke-width:0.264583px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="m -143.35961,172.48845 c -1.84301,2.71278 -3.00765,6.16717 -3.99808,9.13847 -0.66771,2.00311 -0.19173,11.92763 0.57115,13.70769 1.14526,2.67228 3.43777,4.78492 4.56924,7.425 0.66637,1.55488 0.96768,3.64884 1.71346,5.14039 0.61397,1.22794 1.72703,2.17236 2.28461,3.42692 2.30687,5.19046 2.50058,11.64381 3.99808,17.13462 1.32191,4.847 1.95887,9.91706 2.85577,14.85 0.16054,0.883 0,1.95209 0,2.85576 0,0.19039 0,0.76154 0,0.57116 0,-2.8352 1.76669,-5.84461 2.85577,-8.56731 1.48852,-3.72132 3.04837,-8.02356 5.14038,-11.42307 3.10994,-5.05366 8.05296,-8.80114 11.99423,-13.13654 1.91214,-2.10336 3.70523,-4.84754 5.71154,-6.85385 2.70425,-2.70425 6.652348,-5.15488 9.138461,-7.99615 0.731022,-0.83546 1.002778,-2.00295 1.713462,-2.85577 0.272534,-0.32705 0.788094,-0.33501 1.142307,-0.57116 1.853877,-1.23591 2.787915,-3.79451 3.426923,-5.71153 0.548309,-1.64493 1.377008,-11.52484 0.571154,-13.13654 -0.190384,-0.38077 -0.951924,-0.19039 -1.142307,-0.57116 -0.0461,-0.0922 -0.935654,-2.92465 -1.142307,-2.85577 -1.778849,0.59295 -3.426926,1.52308 -5.140388,2.28461"
     id="path4450" /><path
     sodipodi:type="spiral"
     style="fill:none;fill-rule:evenodd;stroke:#000000"
     id="path7955"
     sodipodi:cx="-656.24225"
     sodipodi:cy="546.14899"
     sodipodi:expansion="1"
     sodipodi:revolution="2.99"
     sodipodi:radius="44.292652"
     sodipodi:argument="-19.537653"
     sodipodi:t0="0"
     transform="scale(0.26458333)"
     d="m -656.24225,546.14899 c 1.72118,-1.41506 2.75663,1.62197 2.35191,2.86071 -1.09677,3.35689 -5.54562,3.4795 -8.07333,1.84311 -4.52149,-2.92711 -4.45521,-9.37566 -1.33431,-13.28596 4.58004,-5.73853 13.25974,-5.46564 18.49858,-0.82551 6.98255,6.18457 6.49122,17.1633 0.31671,23.71121 -7.76999,8.23988 -21.07619,7.5247 -28.92383,-0.19209 -9.50455,-9.34607 -8.56277,-24.99437 0.70089,-34.13646 10.91691,-10.77364 28.91583,-9.60372 39.34908,1.20969 12.04561,12.48452 10.6466,32.83949 -1.71849,44.56171 -14.05001,13.31953 -36.76469,11.69082 -49.77433,-2.2273 -14.59485,-15.61403 -12.73603,-40.69101 2.73609,-54.98695 16.38545,-15.13983 42.36896,-14.05284 58.25141,1.24616" /></g><g
   id="skeleton_1_">
	<circle
   id="rightShoulder"
   cx="572.29999"
   cy="365.29999"
   r="8.1999998" />
	<circle
   id="rightElbow"
   cx="519.5"
   cy="365.10001"
   r="8.1999998" />
	<circle
   id="rightWrist"
   cx="393.79999"
   cy="366.10001"
   r="8.1999998" />
	<circle
   id="rightHip"
   cx="581.09998"
   cy="564.09998"
   r="8.1999998" />
	<circle
   id="rightKnee"
   cx="575.59998"
   cy="725.20001"
   r="8.1999998" />
	<circle
   id="rightAnkle"
   cx="575.59998"
   cy="933.20001"
   r="8.1999998" />
	<circle
   id="leftShoulder"
   cx="681.29999"
   cy="365.39999"
   r="8.1999998" />
	<circle
   id="leftElbow"
   cx="735.29999"
   cy="365.10001"
   r="8.1999998" />
	<circle
   id="leftWrist"
   cx="860.59998"
   cy="365.10001"
   r="8.1999998" />
	<circle
   id="leftHip"
   cx="673.09998"
   cy="563.29999"
   r="8.1999998" />
	<circle
   id="leftKnee"
   cx="685.59998"
   cy="725.20001"
   r="8.1999998" />
	<circle
   id="leftAnkle"
   cx="685.59998"
   cy="933.20001"
   r="8.1999998" />
	<polygon
   class="st16"
   points="572.2,365.6 581,564.4 673,563.6 681.2,365.7 "
   id="polygon4621" />
	<polyline
   class="st16"
   points="571.2,365.6 519.2,365.3 393.6,366.2  "
   id="polyline4623" />
	<polyline
   class="st16"
   points="682.7,365.3 735.5,365.3 860.7,365.4  "
   id="polyline4625" />
	<polyline
   class="st16"
   points="581,564.4 575.5,725.5 575.5,933.5  "
   id="polyline4627" />
	<polyline
   class="st16"
   points="673,563.6 685.5,725.5 685.5,933.5  "
   id="polyline4629" />
	<circle
   id="rightEye0"
   cx="594.70001"
   cy="215.10001"
   r="0.80000001" />
	<circle
   id="rightBrow1"
   cx="592.5"
   cy="203.2"
   r="0.80000001" />
	<circle
   id="rightBrow4"
   cx="615.79999"
   cy="206.2"
   r="0.80000001" />
	<circle
   id="nose1"
   cx="623.70001"
   cy="216.10001"
   r="0.80000001" />
	<circle
   id="rightBrow3"
   cx="606"
   cy="202.2"
   r="0.80000001" />
	<circle
   id="rightEye1"
   cx="599.90002"
   cy="211.39999"
   r="0.80000001" />
	<circle
   id="rightBrow0"
   cx="588.5"
   cy="206.89999"
   r="0.80000001" />
	<circle
   id="rightBrow2"
   cx="598.70001"
   cy="202.2"
   r="0.80000001" />
	<circle
   id="rightEye5"
   cx="599.90002"
   cy="217.39999"
   r="0.80000001" />
	<circle
   id="rightEye2"
   cx="606.20001"
   cy="211.39999"
   r="0.80000001" />
	<circle
   id="rightEye3"
   cx="611.40002"
   cy="215.60001"
   r="0.80000001" />
	<circle
   id="nose0"
   cx="623.70001"
   cy="210.3"
   r="0.80000001" />
	<circle
   id="nose3"
   cx="623.70001"
   cy="228.7"
   r="0.80000001" />
	<circle
   id="rightNose0"
   cx="613"
   cy="233.2"
   r="0.80000001" />
	<circle
   id="rightMouthCorner"
   cx="607"
   cy="255.3"
   r="0.80000001" />
	<circle
   id="rightNose1"
   cx="618.20001"
   cy="233.2"
   r="0.80000001" />
	<circle
   id="rightUpperLipTop0"
   cx="613.90002"
   cy="251.89999"
   r="0.80000001" />
	<circle
   id="nose2"
   cx="623.70001"
   cy="221.60001"
   r="0.80000001" />
	<circle
   id="nose4"
   cx="623.70001"
   cy="234"
   r="0.80000001" />
	<circle
   id="upperLipTopMid"
   cx="624.5"
   cy="251.7"
   r="0.80000001" />
	<circle
   id="rightUpperLipTop1"
   cx="620.40002"
   cy="250.8"
   r="0.80000001" />
	<path
   id="rightMiddleLip"
   d="m 610.6,254.8 c 0.4,0 0.8,0.4 0.8,0.8 0,0.4 -0.4,0.8 -0.8,0.8 -0.4,0 -0.8,-0.4 -0.8,-0.8 0,-0.4 0.4,-0.8 0.8,-0.8 z" />
	<circle
   id="lowerLipBottomMid"
   cx="624.5"
   cy="264.89999"
   r="0.80000001" />
	<circle
   id="upperLipBottomMid"
   cx="624.5"
   cy="255.3"
   r="0.80000001" />
	<circle
   id="lowerLipTopMid"
   cx="624.5"
   cy="258.39999"
   r="0.80000001" />
	<circle
   id="rightUpperLipBottom1"
   cx="620.59998"
   cy="254.8"
   r="0.80000001" />
	<circle
   id="rightLowerLipTop0"
   cx="620.59998"
   cy="257.70001"
   r="0.80000001" />
	<circle
   id="rightLowerLipBottom1"
   cx="620.40002"
   cy="264.39999"
   r="0.80000001" />
	<circle
   id="rightLowerLipBottom0"
   cx="613.40002"
   cy="261.60001"
   r="0.80000001" />
	<circle
   id="rightEye4"
   cx="606.20001"
   cy="216.60001"
   r="0.80000001" />
	<circle
   id="jawMid"
   cx="624.5"
   cy="290.70001"
   r="0.80000001" />
	<circle
   id="rightJaw7"
   cx="609.5"
   cy="287.5"
   r="0.80000001" />
	<circle
   id="rightJaw6"
   cx="599.5"
   cy="280.79999"
   r="0.80000001" />
	<circle
   id="rightJaw5"
   cx="587.90002"
   cy="268.29999"
   r="0.80000001" />
	<circle
   id="rightJaw4"
   cx="581.09998"
   cy="248.3"
   r="0.80000001" />
	<circle
   id="rightJaw3"
   cx="580.29999"
   cy="226.60001"
   r="0.80000001" />
	<circle
   id="rightJaw2"
   cx="580.29999"
   cy="217.10001"
   r="0.80000001" />
	<circle
   id="rightJaw1"
   cx="581.09998"
   cy="205.39999"
   r="0.80000001" />
	<circle
   id="rightJaw0"
   cx="583.59998"
   cy="196.10001"
   r="0.80000001" />
	<circle
   id="topMid"
   cx="624.70001"
   cy="170"
   r="0.80000001" />
	<circle
   id="leftTop0"
   cx="644.40002"
   cy="172.5"
   r="0.80000001" />
	<circle
   id="leftTop1"
   cx="657"
   cy="182"
   r="0.80000001" />
	<circle
   id="leftEye0"
   cx="654.29999"
   cy="215.10001"
   r="0.80000001" />
	<circle
   id="leftBrow1"
   cx="656.20001"
   cy="203.60001"
   r="0.80000001" />
	<circle
   id="leftBrow4"
   cx="632.59998"
   cy="205.7"
   r="0.80000001" />
	<circle
   id="leftBrow3"
   cx="642.59998"
   cy="202.5"
   r="0.80000001" />
	<circle
   id="leftEye1"
   cx="649.09998"
   cy="211.39999"
   r="0.80000001" />
	<circle
   id="leftBrow0"
   cx="660.20001"
   cy="206.5"
   r="0.80000001" />
	<circle
   id="leftBrow2"
   cx="649.90002"
   cy="202.10001"
   r="0.80000001" />
	<circle
   id="leftEye5"
   cx="649.09998"
   cy="217.39999"
   r="0.80000001" />
	<circle
   id="leftEye2"
   cx="642.79999"
   cy="211.39999"
   r="0.80000001" />
	<circle
   id="leftEye3"
   cx="637.59998"
   cy="215.60001"
   r="0.80000001" />
	<circle
   id="leftNose0"
   cx="634.09998"
   cy="233.2"
   r="0.80000001" />
	<circle
   id="leftMouthCorner"
   cx="642"
   cy="255.3"
   r="0.80000001" />
	<circle
   id="leftNose1"
   cx="629.29999"
   cy="233.2"
   r="0.80000001" />
	<circle
   id="leftUpperLipTop0"
   cx="635.09998"
   cy="251.89999"
   r="0.80000001" />
	<circle
   id="leftUpperLipTop1"
   cx="628.70001"
   cy="250.8"
   r="0.80000001" />
	<path
   id="leftMiddleLip"
   d="m 638.4,254.8 c 0.4,0 0.8,0.4 0.8,0.8 0,0.4 -0.4,0.8 -0.8,0.8 -0.4,0 -0.8,-0.4 -0.8,-0.8 0,-0.4 0.4,-0.8 0.8,-0.8 z" />
	<circle
   id="leftUpperLipBottom1"
   cx="628.5"
   cy="254.8"
   r="0.80000001" />
	<circle
   id="leftLowerLipTop0"
   cx="628.5"
   cy="257.70001"
   r="0.80000001" />
	<circle
   id="leftLowerLipBottom1"
   cx="628.70001"
   cy="264.39999"
   r="0.80000001" />
	<circle
   id="leftLowerLipBottom0"
   cx="635.59998"
   cy="261.60001"
   r="0.80000001" />
	<circle
   id="leftEye4"
   cx="642.79999"
   cy="216.60001"
   r="0.80000001" />
	<circle
   id="leftJaw7"
   cx="639.29999"
   cy="287.89999"
   r="0.80000001" />
	<circle
   id="leftJaw6"
   cx="649.29999"
   cy="281.20001"
   r="0.80000001" />
	<circle
   id="leftJaw5"
   cx="660.90002"
   cy="268.60001"
   r="0.80000001" />
	<circle
   id="leftJaw4"
   cx="667.70001"
   cy="248.60001"
   r="0.80000001" />
	<circle
   id="leftJaw3"
   cx="668.5"
   cy="227"
   r="0.80000001" />
	<circle
   id="leftJaw2"
   cx="668.5"
   cy="217.39999"
   r="0.80000001" />
	<circle
   id="leftJaw1"
   cx="667.70001"
   cy="205.7"
   r="0.80000001" />
	<circle
   id="leftJaw0"
   cx="665.20001"
   cy="196.5"
   r="0.80000001" />
	<polyline
   class="st16"
   points="624.5,170 604.7,172.5 592.2,182 583.6,196.1 581.1,205.4 580.3,217.1 580.3,226.6 581.1,248.3    587.9,268.3 599.5,280.8 609.5,287.5 624.5,290.7 639.3,287.9 649.3,281.2 660.9,268.6 667.7,248.6 668.5,227 668.5,217.4    667.7,205.7 665.2,196.5 657,182 644.4,172.5 624.5,170  "
   id="polyline4702" />
	<polyline
   class="st16"
   points="588.5,206.9 592.5,203.2 598.7,202.2 606,202.2 615.8,206.2  "
   id="polyline4704" />
	<polygon
   class="st16"
   points="606.2,211.4 611.4,215.6 606.2,216.6 599.9,217.4 594.7,215.1 599.9,211.4 "
   id="polygon4706" />
	<polyline
   class="st16"
   points="613,233.2 618.2,233.2 623.7,234 623.7,228.7 623.7,221.6 623.7,216.1 623.7,210.3  "
   id="polyline4708" />
	<polyline
   class="st16"
   points="660,206.5 656,203.6 649.7,202.1 642.4,202.5 632.4,205.7  "
   id="polyline4710" />
	<polygon
   class="st16"
   points="642.5,211.4 637.4,215.6 642.5,216.6 648.8,217.4 654.1,215.1 648.8,211.4 "
   id="polygon4712" />
	<polyline
   class="st16"
   points="634.1,233.2 629.1,233.2 623.7,234  "
   id="polyline4714" />
	<polygon
   class="st16"
   points="628.5,264.4 624.5,264.9 620.4,264.4 613.4,261.6 607,255.3 613.9,251.9 620.4,250.8 624.5,251.7 628.7,250.8 635.1,251.9 642,255.3 635.6,261.6 "
   id="polygon4716" />
	<polyline
   class="st16"
   points="607,255.3 610.6,255.6 620.6,254.8 624.5,255.3 628.5,254.8 638.4,255.6 642,255.3  "
   id="polyline4718" />
	<polyline
   class="st16"
   points="607,255.3 610.6,255.6 620.6,257.7 624.5,258.5 628.5,257.7 638.4,255.6 642,255.3  "
   id="polyline4720" />
	<circle
   id="rightTop0"
   cx="604.79999"
   cy="172.5"
   r="0.80000001" />
	<circle
   id="rightTop1"
   cx="592.20001"
   cy="182"
   r="0.80000001" />
</g><script
   id="mesh_polyfill-8"
   type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
   id="mesh_polyfill"
   type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>

</svg>
